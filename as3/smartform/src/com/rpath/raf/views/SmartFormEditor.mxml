<?xml version="1.0" encoding="utf-8"?>

<!--
#
# Copyright (c) 2008-2011 rPath, Inc.
#
# All rights reserved
#
-->

<s:Group 
    xmlns:fx="http://ns.adobe.com/mxml/2009" 
    xmlns:s="library://ns.adobe.com/flex/spark" 
    xmlns:mx="library://ns.adobe.com/flex/mx"
    
    xmlns:smartform="http://www.rpath.com/2009/smartform.mxml"
    xmlns:views="com.rpath.raf.views.*" 
    >
    
    
    <fx:Declarations>
        <!-- Place non-visual elements (e.g., services, value objects) here -->
    </fx:Declarations>
    
    <fx:Script>
    <![CDATA[
        import com.rpath.raf.models.Descriptor;
        import com.rpath.raf.models.FieldDescriptor;
        import com.rpath.xobj.XObjUtils;
        import com.rpath.xobj.XObjXMLDecoder;
        import com.rpath.xobj.XObjXMLEncoder;
        
        import mx.events.CloseEvent;
        import mx.events.DynamicEvent;
        import mx.events.IndexChangedEvent;
        import mx.managers.PopUpManager;
        
        [Bindable]
        public var formDescriptor:Descriptor = new Descriptor();
        
        [Bindable]
        public function get descriptorXML():XML
        {
            return _metadata;
        }
        
        private var _metadata:XML;
        
        public function set descriptorXML(value:XML):void
        {
            _metadata = value;
            
            // try parsing into a new Descriptor structure...
            var xmlNode:XMLNode = new XMLDocument(_metadata);
            var xmlDecoder:XObjXMLDecoder = new XObjXMLDecoder({descriptor:Descriptor});
            
            var decode:* = xmlDecoder.decodeXML(xmlNode);
            formDescriptor = decode.root as Descriptor;
        }
        
        
        [Bindable]
        public var data:* = {};
        
        private function recomputeDescriptorXML():void
        {
            var myXML:XMLDocument = new XMLDocument();
            var xmlEncoder:XObjXMLEncoder = new XObjXMLEncoder({descriptor:Descriptor}, myXML);
            
            xmlEncoder.encodeNullElements = false;
            
            var xmlNode:XMLNode;
            var newXML:XML;
            
            xmlNode = xmlEncoder.encodeObject(formDescriptor);
            newXML = new XML(xmlNode.toString());
            
            descriptorXML = newXML;
        }
        
        protected function handleAddField(event:MouseEvent):void
        {
            // popup a field picker panel
            var newField:FieldDescriptor = new FieldDescriptor();
            formDescriptor.dataFields.addItem(newField);
            
            elementGrid.selectedItem = newField;
        }
        
        /* private function onAddFieldToForm(event:Event):void
        {
            var addPanel:AddFieldPanel = event.target as AddFieldPanel;
            
            if (formDescriptor)
            {
                formDescriptor.dataFields.addItem(addPanel.field);
                recomputeMetadataXML();
            }
        } */
        
        protected function handleRemoveField(event:MouseEvent):void
        {
            var elem:FieldDescriptor = elementGrid.selectedItem as FieldDescriptor;
            if (elem)
            {
                formDescriptor.dataFields.removeItemIfPresent(elem);
                recomputeDescriptorXML();
            }
        }
        
        protected function editDescriptorXMLHandler(event:DynamicEvent):void
        {
            descriptorXML = event.xml;
        }
        
        protected function editDataXMLHandler(event:DynamicEvent):void
        {
            var dataXML:XML = event.xml;
            
            // now try and turn it back into a regular data object...
        }

        protected function navigator_changeHandler(event:IndexChangedEvent):void
        {
            if (navigator.selectedChild == formNav)
            {
                // tickle form to recompute
                recomputeDescriptorXML();
            }
            else if (navigator.selectedChild == resultNav)
            {
                dataView.updateDataXML();
            }
        }
        
    ]]>
    </fx:Script>
    
    
    <mx:TabNavigator id="navigator" width="100%" height="100%"
                     change="navigator_changeHandler(event)">
        
        <s:NavigatorContent id="formNav" label="Form"
                            width="100%" height="100%">
            
            <s:Scroller width="100%" height="100%">
                <s:VGroup width="100%">
                    
                    <smartform:SmartForm id="displayForm"
                                         metadata="{descriptorXML}" 
                                         data="{data}"
                                         defaultButton="{okButton}"
                                         />
                    
                    <s:HGroup width="100%"  bottom="0">
                        <s:Button label="Cancel" />
                        <s:Label id="warningLabel" text="Please complete required fields" 
                                 visible="{!displayForm.isValid}" 
                                 color="blue"
                                 click="displayForm.showErrors()"/>
                        
                        <s:Button id="okButton" label="OK" 
                                  enabled="{displayForm.isValid}" />
                    </s:HGroup>
                    
                </s:VGroup>
                
            </s:Scroller>
        </s:NavigatorContent>
        
        <s:NavigatorContent label="Elements" 
                            width="100%" height="100%">
            
            <s:layout>
                <s:VerticalLayout />
            </s:layout>
            
            <s:DataGrid id="elementGrid"
                        dataProvider="{formDescriptor.dataFields}" 
                        width="100%" height="100%"
                        editable="true">
                <s:columns>
                    <s:ArrayList>
                        <s:GridColumn headerText="Description" dataField="descriptions.first" editable="false"/>
                        <s:GridColumn headerText="Property" dataField="name" editable="true"/>
                        <s:GridColumn headerText="Type" dataField="type" editable="false"/>
                        <s:GridColumn headerText="Required?" dataField="required" editable="false"/>
                    </s:ArrayList>
                </s:columns>
            </s:DataGrid>
            
            <s:HGroup width="100%" bottom="0">
                <s:Button label="Add Field" click="handleAddField(event)"/>
                <s:Button label="Remove Field" click="handleRemoveField(event)"
                          enabled="{elementGrid.selectedItem != null}"/>
                
            </s:HGroup>
            
            <views:EditFieldPanel id="editFieldPanel" field="{elementGrid.selectedItem as FieldDescriptor}" 
                                 width="100%"
                                 includeInLayout="{elementGrid.selectedItem != null}"
                                 visible="{editFieldPanel.includeInLayout}"
                                 />
            
        </s:NavigatorContent>
        
        <s:NavigatorContent label="Descriptor XML" 
                            width="100%" height="100%">
            
            <views:DescriptorXMLView descriptorXML="{descriptorXML}" 
                                     width="100%" height="100%"
                                     editDescriptorXML="editDescriptorXMLHandler(event)"/>
            
            
        </s:NavigatorContent>
        
        <s:NavigatorContent id="resultNav" label="Result XML" 
                            width="100%" height="100%"
                            >
            
            <views:DataXMLView id="dataView" data="{data}" 
                                     width="100%" height="100%"
                                     editDataXML="editDataXMLHandler(event)"/>
            
        </s:NavigatorContent>
        
    </mx:TabNavigator>
</s:Group>
