<?xml version="1.0" encoding="utf-8"?>

<!--
#
# Copyright (c) 2008-2011 rPath, Inc.
#
# All rights reserved
#
-->

<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
         xmlns:s="library://ns.adobe.com/flex/spark" 
         xmlns:mx="library://ns.adobe.com/flex/mx"
         >
    
    
    <fx:Metadata>
        [Event(name="editDataXML", type="mx.events.DynamicEvent")]
    </fx:Metadata>
    
    <fx:Declarations>
        <!-- Place non-visual elements (e.g., services, value objects) here -->
    </fx:Declarations>
    
    <fx:Script>
    <![CDATA[
        import com.rpath.raf.models.Descriptor;
        import com.rpath.xobj.XObjUtils;
        import com.rpath.xobj.XObjXMLDecoder;
        import com.rpath.xobj.XObjXMLEncoder;
        
        import mx.events.DynamicEvent;
        import mx.events.FlexEvent;
        import mx.events.PropertyChangeEvent;
        
        [Bindable]
        public var dataString:String;
        
        [Bindable]
        public function get data():Object
        {
            return _data;
        }
        
        private var _data:Object;
        private var _dataChanged:Boolean;
        
        public function set data(value:Object):void
        {
            if (_data)
            {
                removeEventListener(PropertyChangeEvent.PROPERTY_CHANGE, onPropertyChange);
            }
            _data = value;
            
            if (_data as IEventDispatcher)
            {
                (_data as IEventDispatcher).addEventListener(PropertyChangeEvent.PROPERTY_CHANGE, onPropertyChange, false, 0, true);
            }
            
            _dataChanged = true;
            invalidateProperties();
        }
        
        private function onPropertyChange(event:PropertyChangeEvent):void
        {
            _dataChanged = true;
            invalidateProperties();
        }
        
        public function updateDataXML():void
        {
            // convert data object to XML
            var myXML:XMLDocument = new XMLDocument();
            var xmlEncoder:XObjXMLEncoder = new XObjXMLEncoder({data: XObjUtils.getClass(data)}, myXML);
            
            xmlEncoder.encodeNullElements = false;
            
            var xmlNode:XMLNode;
            var newXML:XML;
            
            xmlNode = xmlEncoder.encodeObject(data);
            
            // pretty print a version for our descriptor XML display
            XML.prettyIndent = 2;
            XML.prettyPrinting = true;
            
            dataString = new XML(xmlNode.toString()).toXMLString();
            
            _dataChanged = false; // clear this to prevent repeated change handling
        }
        
        protected function valueCommitHandler(event:FlexEvent):void
        {
            var evt:DynamicEvent = new DynamicEvent("editDataXML", true, true);
            evt.xml = new XML(mdInput.text);
            dispatchEvent(evt);
        }
        
        override protected function commitProperties():void
        {
            if (_dataChanged)
            {
                updateDataXML();
                // do this last in case we reenter
                _dataChanged = false;
            }
            
            super.commitProperties();
            
        }
        
    ]]>
    </fx:Script>
    
    <mx:TextArea id="mdInput" width="100%" height="100%" text="{dataString}" 
                 valueCommit="valueCommitHandler(event)" />
    
</s:Group>
