<?xml version="1.0" encoding="utf-8"?>

<!--
Copyright (c) 2009-2011 rPath, Inc.

This program is distributed under the terms of the MIT License as found 
in a file called LICENSE. If it is not present, the license
is always available at http://www.opensource.org/licenses/mit-license.php.

This program is distributed in the hope that it will be useful, but
without any warranty; without even the implied warranty of merchantability
or fitness for a particular purpose. See the MIT License for full details.
-->


<s:DataRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
         xmlns:s="library://ns.adobe.com/flex/spark" 
         xmlns:mx="library://ns.adobe.com/flex/mx" 

         xmlns:views="com.rpath.raf.views.*"
         
         minHeight="0"
         
         contentBackgroundAlpha="0"
         >

    <s:layout>
        <s:VerticalLayout />
    </s:layout>
    
    <fx:Script>
    <![CDATA[
        import com.rpath.raf.models.Description;
        import com.rpath.raf.models.DescriptionEntry;
        import com.rpath.raf.models.EnumDescriptor;
        import com.rpath.raf.models.EnumTypesDescriptor;
        
        import mx.events.FlexEvent;
        
        [Bindable]
        public var enumTypes:EnumTypesDescriptor;
        
        [Bindable("dataChange")]
        override public function get data():Object
        {
            return super.data;
        }
        
        override public function set data(value:Object):void
        {
            super.data = value;
            enumTypes = data as EnumTypesDescriptor;
        }
        
        protected function enumGroupAddHandler(event:MouseEvent):void
        {
            enumTypes.addItem(new EnumDescriptor());
        }
        
        [Bindable]
        public var editable:Boolean;
        
        [Bindable]
        public var showLang:Boolean;
        
        protected function preinitializeHandler(event:FlexEvent):void
        {
            addEventListener("removeEnumItem", onRemoveEnumItem);
            addEventListener("checkRemoveEnumItem", onCheckRemoveEnumItem);
        }
        
        private function onCheckRemoveEnumItem(event:Event):void
        {
            if (enumTypes.length < 2)
                event.preventDefault();
        }
        
        private function onRemoveEnumItem(event:Event):void
        {
            var elem:* = event.target.data;
            enumTypes.removeItemIfPresent(elem);
        }
        
    ]]>
    </fx:Script>    
    <s:DataGroup id="enumList"  dataProvider="{data}"
                 minHeight="0"
                 enabled="{editable &amp;&amp; enabled}"
                 width="100%"
                 minWidth="300"
                 >
        <s:layout>
            <s:VerticalLayout />
        </s:layout>
        <s:itemRenderer>
            <fx:Component>
                <views:EnumDescItemRenderer width="100%"
                                            enabled="{parentDocument.enabled}" editable="{parentDocument.editable}"
                                            showLang="{parentDocument.showLang}"
                                            />
            </fx:Component>
        </s:itemRenderer>
    </s:DataGroup>
    
    <s:Button id="addButton"
              label="+"  width="32"
              click="enumGroupAddHandler(event)"
              includeInLayout="{editable &amp;&amp; enabled}" 
              visible="{addButton.includeInLayout}"/>
    
</s:DataRenderer>
